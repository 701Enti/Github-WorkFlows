# -------------------------------------------------------------------
# This workflow file is dedicated to the public domain under CC0 1.0.
# See https://creativecommons.org/publicdomain/zero/1.0/
# -------------------------------------------------------------------
name: doxygen-auto-code-to-doc
on:
  workflow_call:
    inputs:
      docRepo:
        description: "document repository path include owner like owner/repo"
        required: true
        type: string
      BRANCH_NAME:
        description: "the branch name get by env"
        required: true
        type: string
    secrets:
      docRepoSecret:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      branch_exists: ${{ steps.check-branch.outputs.branch_exists }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: codefile

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install doxygen
          sudo apt install graphviz

      - name: Doxygen Run
        run: doxygen

      - name: Show variables
        run: |
          echo "${{ inputs.docRepo }}"
          echo "${{ inputs.BRANCH_NAME }}"

      - name: Check if branch exists
        id: check-branch
        env:
          TARGET_REPO: ${{ inputs.docRepo }}
          BRANCH_NAME: "${{ inputs.BRANCH_NAME }}"
        run: |
          branch_exists=$(git ls-remote --heads https://github.com/${TARGET_REPO}.git $BRANCH_NAME)
          if [ -n "$branch_exists" ]; then
            echo "Branch exists"
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Branch does not exist"
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifact with .git
        uses: actions/upload-artifact@v4
        with:
          name: doxygen_run_done
          path: |
            **
            ./git/**

  exists_false:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.branch_exists == 'false' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: doxygen_run_done

      - name: Checkout docs repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.docRepo }}
          token: ${{ secrets.docRepoSecret }}
          path: ${{ inputs.docRepo }}

      - name: Copy built docs to docs repository
        run: cp -r docs/doxygen ${{ inputs.docRepo }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: before_doc_repo_push
          path: ./

      - name: Push changes to docs repository
        env:
          GITHUB_TOKEN: ${{ secrets.docRepoSecret }}
          BRANCH_NAME: ${{ inputs.BRANCH_NAME }}
        run: |
          cd ${{ inputs.docRepo }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "Update documentation"
          git push -u origin $BRANCH_NAME

  exists_true:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.branch_exists == 'true' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: doxygen_run_done

      - name: Checkout docs repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.docRepo }}
          token: ${{ secrets.docRepoSecret }}
          path: ${{ inputs.docRepo }}
          ref: ${{ inputs.BRANCH_NAME }}

      - name: Copy built docs to docs repository
        run: cp -r docs/doxygen ${{ inputs.docRepo }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: before_doc_repo_push
          path: ./

      - name: Push changes to docs repository
        env:
          GITHUB_TOKEN: ${{ secrets.docRepoSecret }}
          BRANCH_NAME: ${{ inputs.BRANCH_NAME }}
        run: |
          cd ${{ inputs.docRepo }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git status
          git add .
          git status
          if git diff-index --quiet HEAD; then
            echo "No changes to commit"
          else
            git commit -m "Update documentation"
            git push -u origin $BRANCH_NAME
          fi
